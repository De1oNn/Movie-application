"use client";

import React, { useEffect, useState } from "react";
import { useParams } from "next/navigation";
import axios from "axios";
import { useRouter } from "next/navigation";

const Page = () => {
  const params = useParams();
  const { id } = params; // Get the ID from the URL params

  const TMDB_BASE_URL = process.env.TMDB_BASE_URL;
  const TMDB_API_TOKEN = process.env.TMDB_API_TOKEN;

  type Genre = {
    id: number;
    name: string;
  };
  
  type ProductionCompany = {
    id: number;
    logo_path: string | null;
    name: string;
    origin_country: string;
  };
  
  type Language = {
    iso_639_1: string;
    name: string;
  };
  
  type Movie = {
    id: number;
    title: string;
    overview: string;
    backdrop_path: string;
    poster_path: string;
    vote_average: number;
    vote_count: number;
    release_date: string;
    adult: boolean; // Flag for adult content
    budget: number; // Budget of the movie
    genres: Genre[]; // Array of genres
    homepage: string; // Movie homepage URL (if available)
    imdb_id: string; // IMDb ID
    origin_country: string[]; // Countries the movie originated from
    original_language: string; // Original language of the movie
    original_title: string; // Original title of the movie
    popularity: number; // Popularity score
    production_companies: ProductionCompany[]; // Production companies
    production_countries: { iso_3166_1: string; name: string }[]; // Production countries
    revenue: number; // Revenue generated by the movie
    runtime: number; // Runtime in minutes
    spoken_languages: Language[]; // Languages spoken in the movie
    status: string; // Current status of the movie (e.g., Released)
    tagline: string; // Tagline of the movie
    video: boolean; // Whether it has a video or not
    director?: string
  };
  
  const [movie, setMovie] = useState<Movie>(); // State to hold the specific movie data
  const router = useRouter();

  const getMovieData = async () => {
    try {
      const response = await axios.get(
        `${TMDB_BASE_URL}/movie/${id}?language=en-US`,
        {
          headers: {
            Authorization: `Bearer ${TMDB_API_TOKEN}`,
          },
        }
      );
      setMovie(response.data); 
      console.log(response.data);
      
    } catch (err) {
      console.error("Error:", err);
    }
  };

  useEffect(() => {
    if (id) {
      getMovieData(); 
    }
  }, [id]); 

  return (
    <div className="flex flex-col items-center justify-center w-[100%]">
      {movie ? (
        <div className="w-screen px-[580px] h-screen" >
          <div className="flex w-full justify-between mt-8 mb-4">
            <div>
              <h1 className="text-[36px] font-bold">{movie.title}</h1>
              <div className="flex">
                <p> 
                {movie.release_date}
                </p>
                <p className="ml-[10px]">{movie.runtime} Minutes</p>
              </div>
            </div>
            <div className="flex flex-col">
              <p className="text-[14px]">Rating</p>
              <div className="flex">
                <div>
                  <svg width="28" height="28" viewBox="0 0 28 28" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path d="M14.0007 2.33325L17.6057 9.63659L25.6673 10.8149L19.834 16.4966L21.2107 24.5233L14.0007 20.7316L6.79065 24.5233L8.16732 16.4966L2.33398 10.8149L10.3957 9.63659L14.0007 2.33325Z" fill="#FDE047" stroke="#FDE047" strokeLinecap="round" strokeLinejoin="round"/>
                  </svg>
                </div>
                <div>
                  <p className="text-[14px]">{movie.vote_average} <span className="text-[12px] text-[#A3A3A3]">/10</span></p>
                  <p className="text-[12px] text-[#A3A3A3]">{movie.vote_count}</p>
                </div>
              </div>
            </div>
          </div>
          <div className="flex justify-between mb-8">
            <img 
              src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`} 
              alt="" 
              className="h-[428px] w-[288px]"
              />
            <img 
              src={`https://image.tmdb.org/t/p/original${movie.backdrop_path}`} 
              alt="" 
              className="h-[428px] w-[760px]"
              />
          </div>
          <div className="flex flex-wrap gap-2 ">
            {movie.genres.map((genre) => (
              <span 
                key={genre.id}
                className="text-[12px] border-[1px] rounded-[10px] px-2 py-1"
              >
                {genre.name}
              </span>
            ))}
          </div>
          <div className="mt-4">
            <p className="text-[16px]">{movie.overview}</p>
          </div>
          <div className="h-[400px]">
            <div>
              <div>
                Director
              </div>
              <div>

              </div>
            </div>
            <div className="h-[1px] bg-[#e5e5e5]">
            </div>
            <div>
              <div>
              Writers
              </div>
              <div>

              </div>
            </div>
            <div className="h-[1px] bg-[#e5e5e5]">
            </div>
            <div>
              <div>
                Stars
              </div>
              <div>

              </div>
            </div>
          </div>
        </div>
      ) : (
        <div className="h-screen flex justify-center items-center">
          <p>Loading...</p>
        </div>
      )}
    </div>
  );
};

export default Page;
